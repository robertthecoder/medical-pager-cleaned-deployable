[{"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/index.js":"1","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/App.jsx":"2","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/index.js":"3","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelContainer.jsx":"4","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelSearch.jsx":"5","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamChannelList.jsx":"6","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamChannelPreview.jsx":"7","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/Auth.jsx":"8","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelListContainer.jsx":"9","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/index.js":"10","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/ChannelInfo.js":"11","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/LightningBolt.js":"12","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/SearchIcon.js":"13","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/InviteIcon.js":"14","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/CloseCreateChannel.js":"15","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/AddChannel.js":"16","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/EditChannel.jsx":"17","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/CreateChannel.jsx":"18","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamMessage.jsx":"19","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelInner.jsx":"20","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/UserList.jsx":"21","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ResultsDropdown.jsx":"22"},{"size":162,"mtime":1630437963084,"results":"23","hashOfConfig":"24"},{"size":1917,"mtime":1631034680989,"results":"25","hashOfConfig":"24"},{"size":696,"mtime":1631037732634,"results":"26","hashOfConfig":"24"},{"size":1430,"mtime":1630791549338,"results":"27","hashOfConfig":"24"},{"size":2605,"mtime":1631037823150,"results":"28","hashOfConfig":"24"},{"size":1680,"mtime":1630951753517,"results":"29","hashOfConfig":"24"},{"size":1589,"mtime":1631033743231,"results":"30","hashOfConfig":"24"},{"size":5637,"mtime":1631034074403,"results":"31","hashOfConfig":"24"},{"size":5472,"mtime":1631037551413,"results":"32","hashOfConfig":"24"},{"size":281,"mtime":1629903345173,"results":"33","hashOfConfig":"24"},{"size":757,"mtime":1627936794000,"results":"34","hashOfConfig":"24"},{"size":521,"mtime":1627936794000,"results":"35","hashOfConfig":"24"},{"size":468,"mtime":1627936794000,"results":"36","hashOfConfig":"24"},{"size":1093,"mtime":1627936794000,"results":"37","hashOfConfig":"24"},{"size":826,"mtime":1627936794000,"results":"38","hashOfConfig":"24"},{"size":725,"mtime":1629975854959,"results":"39","hashOfConfig":"24"},{"size":1888,"mtime":1631036860035,"results":"40","hashOfConfig":"24"},{"size":2269,"mtime":1630870978738,"results":"41","hashOfConfig":"24"},{"size":158,"mtime":1630632261689,"results":"42","hashOfConfig":"24"},{"size":3163,"mtime":1630677474911,"results":"43","hashOfConfig":"24"},{"size":3230,"mtime":1630870244315,"results":"44","hashOfConfig":"24"},{"size":3438,"mtime":1631037858966,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"xkusa4",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/index.js",[],["94","95"],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/App.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/index.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelContainer.jsx",["96"],"import React from 'react';\nimport { Channel, useChatContext, MessageTeam } from 'stream-chat-react';\n\nimport { ChannelInner, CreateChannel, EditChannel } from './';\n\nconst ChannelContainer = ( \n    {\n        isCreating,\n        setIsCreating,\n        isEditing,\n        setIsEditing,\n        createType,\n    }\n\n) => {\n    const {channel} = useChatContext();\n\n    if(isCreating) {\n        return(\n            <div className=\"channel__container\">\n                <CreateChannel createType={createType} setIsCreating={setIsCreating} />\n            </div>\n        )\n    }\n\n    if(isEditing) {\n        return(\n            <div className=\"channel__container\">\n                <EditChannel setIsEditing={setIsEditing} />\n            </div>\n        )\n    }\n\n    const EmptyState = () => (\n        <div className=\"channel-empty__container\">\n            <p className=\"channel-empty__first\">This is the beginning of your chat history.</p>\n            <p className=\"channel-empty__second\">Send messages, attachments, links, emojis, and more!</p>\n        </div>\n    )\n\n    return (\n        <div className=\"channel__container\">\n            <Channel\n                EmptyStateIndicator={EmptyState}\n                Message={(messageProps, i) => <MessageTeam key={i} { ...messageProps} />}\n            >\n\n                <ChannelInner setIsEditing={setIsEditing} />\n            </Channel>\n        </div>\n    );\n}\n\nexport default ChannelContainer;","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelSearch.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamChannelList.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamChannelPreview.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/Auth.jsx",["97"],"import React, {useState} from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\n\nimport signinImage from '../assets/signup.jpg';\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    phoneNumber: '',\n    avatarURL: ''\n}\n\nconst Auth = () => {\n    const [form, setForm] = useState(initialState);\n\n    const [isSignup, setIsSignup] = useState(true);\n\n    const handleChange = (e) => {\n        setForm({... form, [e.target.name]: e.target.value});\n\n        console.log(form);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // when you submit, it reloads but we don't want this in react\n        console.log(form);\n\n        const {username, password, phoneNumber, avatarURL} = form;\n\n        const URL = 'http://localhost:5000/auth';\n\n        const {data: {token, userId, hashedPassword, fullName}} = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\n            username, password, fullName: form.fullName, phoneNumber, avatarURL, \n        })\n\n\n        console.log(\"token\", token);\n        console.log(\"userId\", userId);\n\n        cookies.set('token', token);\n        cookies.set('username', username);\n        cookies.set('fullName', fullName);\n        cookies.set('userId', userId);\n        // cookies.set('userId', 'rjkinc');\n\n        if (isSignup) {\n            cookies.set('phoneNumber', phoneNumber);\n            cookies.set('avatarURL', avatarURL);\n            cookies.set('hashedPassword', hashedPassword);\n        }\n\n        window.location.reload();\n\n\n\n    }\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n\n    }\n\n\n\n    return (\n        <div className=\"auth__form-container\">\n            <div className=\"auth__form-container_fields\">\n                <div className=\"auth__form-container_fields-content\">\n\n                    <p>{isSignup ? 'Sign Up' : 'Sign In'}</p>\n\n                    <form onSubmit={handleSubmit}>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"fullName\">Full Name</label>\n                                <input\n                                    name=\"fullName\" type=\"text\" placeholder=\"Full Name\" onChange={handleChange} required\n                                />\n                            </div>\n                        )}\n\n                        <div   div className=\"auth__form-container_fields-content_input\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input\n                                name=\"username\" type=\"text\" placeholder=\"Username\" onChange={handleChange} required\n                            />\n                        </div>\n\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <input\n                                    name=\"phoneNumber\" type=\"text\" placeholder=\"Phone Number\" onChange={handleChange} required\n                                />\n                            </div>\n                        )}\n\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\n                                <input\n                                    name=\"avatarURL\" type=\"text\" placeholder=\"Avatar URL\" onChange={handleChange} required\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"auth__form-container_fields-content_input\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} required\n                            />\n                        </div>\n\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input\n                                    name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" onChange={handleChange} required\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"auth__form-container_fields-content_button\">\n                            <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\n                        </div>\n                        \n                    </form>\n                    <div className=\"auth__form-container_fields-account\">\n                        <p>\n                            {isSignup\n                                ? \"Already have an account?\"\n                                : \"Don't have an account?\"\n                            }\n                            <span onClick={switchMode}>\n                                {isSignup ? 'Sign in' : 'Sign Up'}\n                            </span>\n                        </p>\n                    </div>\n                </div>\n\n                <div className=\"auth__form-container_image\">\n                    <img src={signinImage} alt=\"sign in\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelListContainer.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/index.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/ChannelInfo.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/LightningBolt.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/SearchIcon.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/InviteIcon.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/CloseCreateChannel.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/assets/AddChannel.js",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/EditChannel.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/CreateChannel.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/TeamMessage.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ChannelInner.jsx",[],"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/UserList.jsx",["98"],"import React, {useEffect, useState} from 'react';\nimport {Avatar, useChatContext} from 'stream-chat-react';\n\nimport {InviteIcon} from '../assets';\n\nconst ListContainer = ({children}) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\"> \n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = ({user, setSelectedUsers}) => {\n    const [selected, setSelected] = useState(false);\n\n    const handleSelect = () => {\n        // setSelected((prevSelected) => !prevSelected);\n\n        if (selected) {\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id));\n        } else {\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id]); \n        }\n\n        setSelected((prevSelected) => !prevSelected);\n    }\n\n    return (\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\n            <div className=\"user-item__name-wrapper\">\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\n            </div>\n\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\"/>}\n\n\n            \n            \n\n            \n        </div>\n    )\n}\n\nconst UserList = ({setSelectedUsers}) => {\n    const {client} = useChatContext();\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [listEmpty, setListEmpty] = useState(false);\n    const [error, setError] = useState(false)\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if(loading) return;\n\n            setLoading(true);\n\n\n            try {\n                const response = await client.queryUsers(\n                    {id : {$ne: client.userID}},\n                    {id : 1},\n                    {limit : 8}\n                );\n\n                if(response.users.length) {\n                    setUsers(response.users)\n                } else {\n                    setListEmpty(true);\n                }\n            } catch (error) {\n                // console.log(error);\n                setError(true);\n            }\n            setLoading(false);\n        }\n\n        if (client) {\n            getUsers()\n        }\n    }, [])\n\n    if(error) {\n        return (\n            <ListContainer>\n                 <div className=\"user-list__message\">\n                    Error loading, please refresh and try again. \n                </div>\n            </ListContainer>\n        )\n    }\n    if(listEmpty) {\n        return (\n            <ListContainer>\n                 <div className=\"user-list__message\">\n                    No users found.\n                </div>\n            </ListContainer>\n        )\n    }\n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading users...\n            </div> : (users?.map((user, i) => (\n                <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers}/>\n            )))\n            }\n\n        </ListContainer>\n\n       \n    );\n}\n\nexport default UserList;","/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/ResultsDropdown.jsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":16,"column":12,"nodeType":"105","messageId":"106","endLine":16,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":24,"column":21,"nodeType":"109","messageId":"110","endLine":24,"endColumn":22,"fix":"111"},{"ruleId":"112","severity":1,"message":"113","line":89,"column":8,"nodeType":"114","endLine":89,"endColumn":10,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'channel' is assigned a value but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"118","text":"119"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["120"],"no-global-assign","no-unsafe-negation",[513,514],"",{"desc":"121","fix":"122"},"Update the dependencies array to be: [client, loading]",{"range":"123","text":"124"},[2375,2377],"[client, loading]"]