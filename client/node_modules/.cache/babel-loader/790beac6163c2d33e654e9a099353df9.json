{"ast":null,"code":"var _jsxFileName = \"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/UserList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = ({\n  user\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.image,\n        name: user.fullName || user.id,\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-item__name\",\n        children: user.fullName || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = UserItem;\n\nconst UserList = () => {\n  return test; // const [client] = useChatContext();\n  // const [users, setUsers] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [listEmpty, setListEmpty] = useState(false);\n  // useEffect(() => {\n  //     const getUsers = async () => {\n  //         if(loading) return;\n  //         setLoading(true);\n  //         try {\n  //             const response = await client.queryUsers(\n  //                 {id : {$ne: client.userID}},\n  //                 {id : 1},\n  //                 {limit : 8}\n  //             );\n  //             if(response.users.length) {\n  //                 setUsers(response.users)\n  //             } else {\n  //                 setListEmpty(true);\n  //             }\n  //         } catch (error) {\n  //             console.log(error);\n  //         }\n  //         setLoading(false);\n  //     }\n  //     if (client) {\n  //         getUsers()\n  //     }\n  // }, [])\n  // return (\n  //     <ListContainer>\n  //         whatup\n  //         {loading ? <div className=\"user-list__message\">\n  //             Loading users...\n  //         </div> : (users?.map((user, i) => (\n  //             <UserItem index={i} key={user.id} user={user}/>\n  //         )))\n  //         }\n  //     </ListContainer>\n  // );\n};\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","InviteIcon","ListContainer","children","UserItem","user","image","fullName","id","UserList","test"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,cAAhB,QAAqC,mBAArC;AAEA,SAAQC,UAAR,QAAyB,WAAzB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAClC,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKA,QALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMD,a;;AAYN,MAAME,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACzB,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAA2B,QAAA,IAAI,EAAED,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACG,EAAvD;AAA2D,QAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBAAgCH,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACG;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;MAAMJ,Q;;AAYN,MAAMK,QAAQ,GAAG,MAAM;AACnB,SAEIC,IAFJ,CADmB,CAMnB;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACH,CAxDD;;MAAMD,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Avatar, useChatContext} from 'stream-chat-react';\n\nimport {InviteIcon} from '../assets';\n\nconst ListContainer = ({children}) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\"> \n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = ({user}) => {\n    return (\n        <div className=\"user-item__wrapper\">\n            <div className=\"user-item__name-wrapper\">\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\n            </div>\n        </div>\n    )\n}\n\nconst UserList = () => {\n    return (\n\n        test\n    )\n\n    // const [client] = useChatContext();\n    // const [users, setUsers] = useState([]);\n    // const [loading, setLoading] = useState(false);\n    // const [listEmpty, setListEmpty] = useState(false);\n\n\n    // useEffect(() => {\n    //     const getUsers = async () => {\n    //         if(loading) return;\n\n    //         setLoading(true);\n\n\n    //         try {\n    //             const response = await client.queryUsers(\n    //                 {id : {$ne: client.userID}},\n    //                 {id : 1},\n    //                 {limit : 8}\n    //             );\n\n    //             if(response.users.length) {\n    //                 setUsers(response.users)\n    //             } else {\n    //                 setListEmpty(true);\n    //             }\n    //         } catch (error) {\n    //             console.log(error);\n    //         }\n    //         setLoading(false);\n    //     }\n\n    //     if (client) {\n    //         getUsers()\n    //     }\n    // }, [])\n\n    // return (\n    //     <ListContainer>\n    //         whatup\n    //         {loading ? <div className=\"user-list__message\">\n    //             Loading users...\n    //         </div> : (users?.map((user, i) => (\n    //             <UserItem index={i} key={user.id} user={user}/>\n    //         )))\n    //         }\n\n    //     </ListContainer>\n\n       \n    // );\n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}