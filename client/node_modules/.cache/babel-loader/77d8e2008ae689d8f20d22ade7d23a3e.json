{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\n\nexport var Thread = function (props) {\n  var _a, _b;\n\n  var _c = useChannelStateContext(),\n      channel = _c.channel,\n      thread = _c.thread;\n\n  if (!thread || ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.getConfig) === null || _a === void 0 ? void 0 : _a.call(channel)) === null || _b === void 0 ? void 0 : _b.replies) === false) return null; // The wrapper ensures a key variable is set and the component recreates on thread switch\n\n  return React.createElement(ThreadInner, __assign({}, props, {\n    key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid)\n  }));\n};\n\nvar DefaultThreadHeader = function (props) {\n  var closeThread = props.closeThread,\n      thread = props.thread;\n  var t = useTranslationContext().t;\n\n  var getReplyCount = function () {\n    if (!thread.reply_count) return '';\n    if (thread.reply_count === 1) return t('1 reply');\n    return t('{{ replyCount }} replies', {\n      replyCount: thread.reply_count\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-header'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__thread-header-details'\n  }, React.createElement(\"strong\", null, t('Thread')), React.createElement(\"small\", null, getReplyCount())), React.createElement(\"button\", {\n    className: 'str-chat__square-button',\n    \"data-testid\": 'close-button',\n    onClick: function (event) {\n      return closeThread(event);\n    }\n  }, React.createElement(\"svg\", {\n    height: '10',\n    width: '10',\n    xmlns: 'http://www.w3.org/2000/svg'\n  }, React.createElement(\"path\", {\n    d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z',\n    fillRule: 'evenodd'\n  }))));\n};\n\nvar DefaultThreadStart = function () {\n  var t = useTranslationContext().t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-start'\n  }, t('Start of a new thread'));\n};\n\nvar ThreadInner = function (props) {\n  var additionalMessageInputProps = props.additionalMessageInputProps,\n      additionalMessageListProps = props.additionalMessageListProps,\n      additionalParentMessageProps = props.additionalParentMessageProps,\n      additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps,\n      _a = props.autoFocus,\n      autoFocus = _a === void 0 ? true : _a,\n      _b = props.fullWidth,\n      fullWidth = _b === void 0 ? false : _b,\n      PropInput = props.Input,\n      PropMessage = props.Message,\n      virtualized = props.virtualized;\n\n  var _c = useChannelStateContext(),\n      thread = _c.thread,\n      threadHasMore = _c.threadHasMore,\n      threadLoadingMore = _c.threadLoadingMore,\n      threadMessages = _c.threadMessages;\n\n  var _d = useChannelActionContext(),\n      closeThread = _d.closeThread,\n      loadMoreThread = _d.loadMoreThread;\n\n  var _e = useComponentContext(),\n      ContextInput = _e.ThreadInput,\n      ContextMessage = _e.Message,\n      _f = _e.ThreadHeader,\n      ThreadHeader = _f === void 0 ? DefaultThreadHeader : _f,\n      _g = _e.ThreadStart,\n      ThreadStart = _g === void 0 ? DefaultThreadStart : _g,\n      _h = _e.VirtualMessage,\n      VirtualMessage = _h === void 0 ? FixedHeightMessage : _h;\n\n  var messageList = useRef(null);\n  var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n  var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n  var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n  var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n  useEffect(function () {\n    if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n      loadMoreThread();\n    }\n  }, []);\n  useEffect(function () {\n    if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n      var _a = messageList.current,\n          clientHeight = _a.clientHeight,\n          scrollHeight = _a.scrollHeight,\n          scrollTop = _a.scrollTop;\n      var scrollDown = clientHeight + scrollTop !== scrollHeight;\n\n      if (scrollDown) {\n        messageList.current.scrollTop = scrollHeight - clientHeight;\n      }\n    }\n  }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n  if (!thread) return null;\n  return React.createElement(\"div\", {\n    className: \"str-chat__thread \" + (fullWidth ? 'str-chat__thread--full' : '')\n  }, React.createElement(ThreadHeader, {\n    closeThread: closeThread,\n    thread: thread\n  }), React.createElement(\"div\", {\n    className: 'str-chat__thread-list',\n    ref: messageList\n  }, React.createElement(Message, __assign({\n    initialMessage: true,\n    message: thread,\n    Message: ThreadMessage || FallbackMessage,\n    threadList: true\n  }, additionalParentMessageProps)), React.createElement(ThreadStart, null), React.createElement(ThreadMessageList, __assign({\n    hasMore: threadHasMore,\n    loadingMore: threadLoadingMore,\n    loadMore: loadMoreThread,\n    Message: ThreadMessage || FallbackMessage,\n    messages: threadMessages || [],\n    threadList: true\n  }, virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps))), React.createElement(MessageInput, __assign({\n    focus: autoFocus,\n    Input: ThreadInput,\n    parent: thread,\n    publishTypingEvent: false\n  }, additionalMessageInputProps)));\n};","map":{"version":3,"sources":["/Users/rj/Documents/0. coding-project/medical-pager-chat/client/node_modules/stream-chat-react/dist/components/Thread/Thread.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useRef","FixedHeightMessage","Message","MessageInput","MessageInputSmall","MessageList","VirtualizedMessageList","useChannelActionContext","useChannelStateContext","useComponentContext","useTranslationContext","Thread","props","_a","_b","_c","channel","thread","getConfig","replies","createElement","ThreadInner","key","id","cid","DefaultThreadHeader","closeThread","getReplyCount","reply_count","replyCount","className","onClick","event","height","width","xmlns","d","fillRule","DefaultThreadStart","additionalMessageInputProps","additionalMessageListProps","additionalParentMessageProps","additionalVirtualizedMessageListProps","autoFocus","fullWidth","PropInput","Input","PropMessage","virtualized","threadHasMore","threadLoadingMore","threadMessages","_d","loadMoreThread","_e","ContextInput","ThreadInput","ContextMessage","_f","ThreadHeader","_g","ThreadStart","_h","VirtualMessage","messageList","ThreadMessage","FallbackMessage","ThreadMessageList","current","clientHeight","scrollHeight","scrollTop","scrollDown","ref","initialMessage","message","threadList","hasMore","loadingMore","loadMore","messages","focus","parent","publishTypingEvent"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useRef } from 'react';\nimport { FixedHeightMessage } from '../Message/FixedHeightMessage';\nimport { Message } from '../Message/Message';\nimport { MessageInput } from '../MessageInput/MessageInput';\nimport { MessageInputSmall } from '../MessageInput/MessageInputSmall';\nimport { MessageList } from '../MessageList/MessageList';\nimport { VirtualizedMessageList, } from '../MessageList/VirtualizedMessageList';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The Thread component renders a parent Message with a list of replies\n */\nexport var Thread = function (props) {\n    var _a, _b;\n    var _c = useChannelStateContext(), channel = _c.channel, thread = _c.thread;\n    if (!thread || ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.getConfig) === null || _a === void 0 ? void 0 : _a.call(channel)) === null || _b === void 0 ? void 0 : _b.replies) === false)\n        return null;\n    // The wrapper ensures a key variable is set and the component recreates on thread switch\n    return React.createElement(ThreadInner, __assign({}, props, { key: \"thread-\" + thread.id + \"-\" + (channel === null || channel === void 0 ? void 0 : channel.cid) }));\n};\nvar DefaultThreadHeader = function (props) {\n    var closeThread = props.closeThread, thread = props.thread;\n    var t = useTranslationContext().t;\n    var getReplyCount = function () {\n        if (!thread.reply_count)\n            return '';\n        if (thread.reply_count === 1)\n            return t('1 reply');\n        return t('{{ replyCount }} replies', {\n            replyCount: thread.reply_count,\n        });\n    };\n    return (React.createElement(\"div\", { className: 'str-chat__thread-header' },\n        React.createElement(\"div\", { className: 'str-chat__thread-header-details' },\n            React.createElement(\"strong\", null, t('Thread')),\n            React.createElement(\"small\", null, getReplyCount())),\n        React.createElement(\"button\", { className: 'str-chat__square-button', \"data-testid\": 'close-button', onClick: function (event) { return closeThread(event); } },\n            React.createElement(\"svg\", { height: '10', width: '10', xmlns: 'http://www.w3.org/2000/svg' },\n                React.createElement(\"path\", { d: 'M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z', fillRule: 'evenodd' })))));\n};\nvar DefaultThreadStart = function () {\n    var t = useTranslationContext().t;\n    return React.createElement(\"div\", { className: 'str-chat__thread-start' }, t('Start of a new thread'));\n};\nvar ThreadInner = function (props) {\n    var additionalMessageInputProps = props.additionalMessageInputProps, additionalMessageListProps = props.additionalMessageListProps, additionalParentMessageProps = props.additionalParentMessageProps, additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps, _a = props.autoFocus, autoFocus = _a === void 0 ? true : _a, _b = props.fullWidth, fullWidth = _b === void 0 ? false : _b, PropInput = props.Input, PropMessage = props.Message, virtualized = props.virtualized;\n    var _c = useChannelStateContext(), thread = _c.thread, threadHasMore = _c.threadHasMore, threadLoadingMore = _c.threadLoadingMore, threadMessages = _c.threadMessages;\n    var _d = useChannelActionContext(), closeThread = _d.closeThread, loadMoreThread = _d.loadMoreThread;\n    var _e = useComponentContext(), ContextInput = _e.ThreadInput, ContextMessage = _e.Message, _f = _e.ThreadHeader, ThreadHeader = _f === void 0 ? DefaultThreadHeader : _f, _g = _e.ThreadStart, ThreadStart = _g === void 0 ? DefaultThreadStart : _g, _h = _e.VirtualMessage, VirtualMessage = _h === void 0 ? FixedHeightMessage : _h;\n    var messageList = useRef(null);\n    var ThreadInput = PropInput || (additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) || ContextInput || MessageInputSmall;\n    var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);\n    var FallbackMessage = virtualized ? VirtualMessage : ContextMessage;\n    var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;\n    useEffect(function () {\n        if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {\n            loadMoreThread();\n        }\n    }, []);\n    useEffect(function () {\n        if (messageList.current && (threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length)) {\n            var _a = messageList.current, clientHeight = _a.clientHeight, scrollHeight = _a.scrollHeight, scrollTop = _a.scrollTop;\n            var scrollDown = clientHeight + scrollTop !== scrollHeight;\n            if (scrollDown) {\n                messageList.current.scrollTop = scrollHeight - clientHeight;\n            }\n        }\n    }, [threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length]);\n    if (!thread)\n        return null;\n    return (React.createElement(\"div\", { className: \"str-chat__thread \" + (fullWidth ? 'str-chat__thread--full' : '') },\n        React.createElement(ThreadHeader, { closeThread: closeThread, thread: thread }),\n        React.createElement(\"div\", { className: 'str-chat__thread-list', ref: messageList },\n            React.createElement(Message, __assign({ initialMessage: true, message: thread, Message: ThreadMessage || FallbackMessage, threadList: true }, additionalParentMessageProps)),\n            React.createElement(ThreadStart, null),\n            React.createElement(ThreadMessageList, __assign({ hasMore: threadHasMore, loadingMore: threadLoadingMore, loadMore: loadMoreThread, Message: ThreadMessage || FallbackMessage, messages: threadMessages || [], threadList: true }, (virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps)))),\n        React.createElement(MessageInput, __assign({ focus: autoFocus, Input: ThreadInput, parent: thread, publishTypingEvent: false }, additionalMessageInputProps))));\n};\n"]},"metadata":{},"sourceType":"module"}