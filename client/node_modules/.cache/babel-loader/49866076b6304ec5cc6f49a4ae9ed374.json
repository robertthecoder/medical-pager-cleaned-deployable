{"ast":null,"code":"import React from 'react';\nimport { Avatar } from '../Avatar';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var QuotedMessage = function () {\n  var _a, _b;\n\n  var Attachment = useComponentContext().Attachment;\n\n  var _c = useMessageContext(),\n      isMyMessage = _c.isMyMessage,\n      message = _c.message;\n\n  var userLanguage = useTranslationContext().userLanguage;\n  var quoted_message = message.quoted_message;\n  if (!quoted_message) return null;\n  var quotedMessageText = ((_a = quoted_message.i18n) === null || _a === void 0 ? void 0 : _a[userLanguage + \"_text\"]) || quoted_message.text; // @ts-expect-error\n\n  var quotedMessageAttachment = quoted_message.attachments.length ? // @ts-expect-error\n  quoted_message.attachments[0] : null;\n  if (!quotedMessageText && !quotedMessageAttachment) return null;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"\" + (isMyMessage() ? 'quoted-message mine' : 'quoted-message')\n  }, quoted_message.user && React.createElement(Avatar, {\n    image: quoted_message.user.image,\n    name: quoted_message.user.name || quoted_message.user.id,\n    size: 20,\n    user: quoted_message.user\n  }), React.createElement(\"div\", {\n    className: 'quoted-message-inner'\n  }, quotedMessageAttachment && React.createElement(Attachment, {\n    attachments: [quotedMessageAttachment]\n  }), React.createElement(\"div\", null, quotedMessageText))), ((_b = message.attachments) === null || _b === void 0 ? void 0 : _b.length) && message.quoted_message ? React.createElement(Attachment, {\n    attachments: message.attachments\n  }) : null);\n};","map":{"version":3,"sources":["/Users/rj/Documents/0. coding-project/medical-pager-chat/client/node_modules/stream-chat-react/dist/components/Message/QuotedMessage.js"],"names":["React","Avatar","useComponentContext","useMessageContext","useTranslationContext","QuotedMessage","_a","_b","Attachment","_c","isMyMessage","message","userLanguage","quoted_message","quotedMessageText","i18n","text","quotedMessageAttachment","attachments","length","createElement","Fragment","className","user","image","name","id","size"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAO,IAAIC,aAAa,GAAG,YAAY;AACnC,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAIC,UAAU,GAAGN,mBAAmB,GAAGM,UAAvC;;AACA,MAAIC,EAAE,GAAGN,iBAAiB,EAA1B;AAAA,MAA8BO,WAAW,GAAGD,EAAE,CAACC,WAA/C;AAAA,MAA4DC,OAAO,GAAGF,EAAE,CAACE,OAAzE;;AACA,MAAIC,YAAY,GAAGR,qBAAqB,GAAGQ,YAA3C;AACA,MAAIC,cAAc,GAAGF,OAAO,CAACE,cAA7B;AACA,MAAI,CAACA,cAAL,EACI,OAAO,IAAP;AACJ,MAAIC,iBAAiB,GAAG,CAAC,CAACR,EAAE,GAAGO,cAAc,CAACE,IAArB,MAA+B,IAA/B,IAAuCT,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACM,YAAY,GAAG,OAAhB,CAAnE,KACpBC,cAAc,CAACG,IADnB,CARmC,CAUnC;;AACA,MAAIC,uBAAuB,GAAGJ,cAAc,CAACK,WAAf,CAA2BC,MAA3B,GACxB;AACEN,EAAAA,cAAc,CAACK,WAAf,CAA2B,CAA3B,CAFsB,GAGxB,IAHN;AAIA,MAAI,CAACJ,iBAAD,IAAsB,CAACG,uBAA3B,EACI,OAAO,IAAP;AACJ,SAAQjB,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACqB,QAA1B,EAAoC,IAApC,EACJrB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAAEE,IAAAA,SAAS,EAAE,MAAMZ,WAAW,KAAK,qBAAL,GAA6B,gBAA9C;AAAb,GAA3B,EACIG,cAAc,CAACU,IAAf,IAAwBvB,KAAK,CAACoB,aAAN,CAAoBnB,MAApB,EAA4B;AAAEuB,IAAAA,KAAK,EAAEX,cAAc,CAACU,IAAf,CAAoBC,KAA7B;AAAoCC,IAAAA,IAAI,EAAEZ,cAAc,CAACU,IAAf,CAAoBE,IAApB,IAA4BZ,cAAc,CAACU,IAAf,CAAoBG,EAA1F;AAA8FC,IAAAA,IAAI,EAAE,EAApG;AAAwGJ,IAAAA,IAAI,EAAEV,cAAc,CAACU;AAA7H,GAA5B,CAD5B,EAEIvB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACIL,uBAAuB,IAAIjB,KAAK,CAACoB,aAAN,CAAoBZ,UAApB,EAAgC;AAAEU,IAAAA,WAAW,EAAE,CAACD,uBAAD;AAAf,GAAhC,CAD/B,EAEIjB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiCN,iBAAjC,CAFJ,CAFJ,CADI,EAMJ,CAAC,CAACP,EAAE,GAAGI,OAAO,CAACO,WAAd,MAA+B,IAA/B,IAAuCX,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACY,MAApE,KAA+ER,OAAO,CAACE,cAAvF,GAAyGb,KAAK,CAACoB,aAAN,CAAoBZ,UAApB,EAAgC;AAAEU,IAAAA,WAAW,EAAEP,OAAO,CAACO;AAAvB,GAAhC,CAAzG,GAAkL,IAN9K,CAAR;AAOH,CAxBM","sourcesContent":["import React from 'react';\nimport { Avatar } from '../Avatar';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var QuotedMessage = function () {\n    var _a, _b;\n    var Attachment = useComponentContext().Attachment;\n    var _c = useMessageContext(), isMyMessage = _c.isMyMessage, message = _c.message;\n    var userLanguage = useTranslationContext().userLanguage;\n    var quoted_message = message.quoted_message;\n    if (!quoted_message)\n        return null;\n    var quotedMessageText = ((_a = quoted_message.i18n) === null || _a === void 0 ? void 0 : _a[userLanguage + \"_text\"]) ||\n        quoted_message.text;\n    // @ts-expect-error\n    var quotedMessageAttachment = quoted_message.attachments.length\n        ? // @ts-expect-error\n            quoted_message.attachments[0]\n        : null;\n    if (!quotedMessageText && !quotedMessageAttachment)\n        return null;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"\" + (isMyMessage() ? 'quoted-message mine' : 'quoted-message') },\n            quoted_message.user && (React.createElement(Avatar, { image: quoted_message.user.image, name: quoted_message.user.name || quoted_message.user.id, size: 20, user: quoted_message.user })),\n            React.createElement(\"div\", { className: 'quoted-message-inner' },\n                quotedMessageAttachment && React.createElement(Attachment, { attachments: [quotedMessageAttachment] }),\n                React.createElement(\"div\", null, quotedMessageText))),\n        ((_b = message.attachments) === null || _b === void 0 ? void 0 : _b.length) && message.quoted_message ? (React.createElement(Attachment, { attachments: message.attachments })) : null));\n};\n"]},"metadata":{},"sourceType":"module"}