{"ast":null,"code":"var _jsxFileName = \"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie'; // import ChannelListContainer from './components/ChannelListContainer';\n// import ChannelContainer from './components/ChannelContainer';\n\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst apiKey = 'bejsa5rtjx89';\nconst authToken = cookies.get(\"token\");\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n  console.log(\"user id\", cookies.get('userId'));\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('username'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n  }, authToken);\n}\n\nconst App = () => {\n  _s();\n\n  const [createType, setCreateType] = useState('');\n  if (!authToken) return /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      client: client,\n      theme: \"team light\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelListContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"QM4vQLTcEReVOxgZw8PQfSw6MNQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/App.jsx"],"names":["React","StreamChat","Chat","Cookies","ChannelListContainer","ChannelContainer","Auth","cookies","apiKey","authToken","get","client","getInstance","console","log","connectUser","id","name","fullName","image","hashedPassword","phoneNumber","App","createType","setCreateType","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;;AAEA,SAAQC,oBAAR,EAA8BC,gBAA9B,EAAgDC,IAAhD,QAA2D,cAA3D;AAEA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,MAAMK,MAAM,GAAG,cAAf;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAlB;AAKA,MAAMC,MAAM,GAAGV,UAAU,CAACW,WAAX,CAAuBJ,MAAvB,CAAf;;AAEA,IAAIC,SAAJ,EAAe;AACXI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,OAAO,CAACG,GAAR,CAAY,QAAZ,CAAvB;AAEAC,EAAAA,MAAM,CAACI,WAAP,CAAmB;AACfC,IAAAA,EAAE,EAAET,OAAO,CAACG,GAAR,CAAY,QAAZ,CADW;AAEfO,IAAAA,IAAI,EAAEV,OAAO,CAACG,GAAR,CAAY,UAAZ,CAFS;AAGfQ,IAAAA,QAAQ,EAAEX,OAAO,CAACG,GAAR,CAAY,UAAZ,CAHK;AAIfS,IAAAA,KAAK,EAAEZ,OAAO,CAACG,GAAR,CAAY,WAAZ,CAJQ;AAKfU,IAAAA,cAAc,EAAEb,OAAO,CAACG,GAAR,CAAY,gBAAZ,CALD;AAMfW,IAAAA,WAAW,EAAEd,OAAO,CAACG,GAAR,CAAY,aAAZ;AANE,GAAnB,EAOGD,SAPH;AAQH;;AAID,MAAMa,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAI,CAAChB,SAAL,EAAgB,oBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhB,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEE,MAAd;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAA,8BACI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlBD;;GAAMW,G;;KAAAA,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport {StreamChat} from 'stream-chat';\nimport {Chat} from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\n// import ChannelListContainer from './components/ChannelListContainer';\n// import ChannelContainer from './components/ChannelContainer';\n\nimport {ChannelListContainer, ChannelContainer, Auth} from './components';\n\nimport './App.css';\n\nconst cookies = new Cookies();\nconst apiKey = 'bejsa5rtjx89';\nconst authToken = cookies.get(\"token\");\n\n\n\n\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n    console.log(\"user id\", cookies.get('userId'));\n\n    client.connectUser({\n        id: cookies.get('userId'),\n        name: cookies.get('username'),\n        fullName: cookies.get('fullName'),\n        image: cookies.get('avatarURL'),\n        hashedPassword: cookies.get('hashedPassword'),\n        phoneNumber: cookies.get('phoneNumber'),\n    }, authToken);\n}\n\n\n\nconst App = () => {\n    const [createType, setCreateType] = useState('');\n\n    if (!authToken) return <Auth />\n\n    return (\n        <div className=\"app__wrapper\">\n            <Chat client={client} theme=\"team light\"> \n                <ChannelListContainer\n                \n                />\n\n                <ChannelContainer\n                \n                />\n            </Chat>\n        </div>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}