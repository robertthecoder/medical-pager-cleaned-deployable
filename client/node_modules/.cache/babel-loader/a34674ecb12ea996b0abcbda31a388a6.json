{"ast":null,"code":"var _jsxFileName = \"/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/EditChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = ({\n  channelName = '',\n  setChannelName\n}) => {\n  // const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n  // const [channelName, setChannelName] = useState('');\n  const handleChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-name-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: handleChange,\n      placeholder: \"Channel-name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChannelNameInput;\n\nconst EditChannel = ({\n  setIsEditing\n}) => {\n  _s();\n\n  var _channel$data;\n\n  const {\n    channel\n  } = useChatContext();\n  const [channelName, setChannelName] = useState(channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const updateChannel = async event => {\n    event.preventDefault();\n    const nameChanged = channelName !== (channel.data.name || channel.data.id);\n\n    if (nameChanged) {\n      await channel.update({\n        name: channelName\n      }, {\n        text: `Channel name changed to ${channelName}`\n      });\n    }\n\n    if (selectedUsers.length) {\n      await channel.addMembers(selectedUsers);\n    }\n\n    setChannelName(null);\n    setIsEditing(false);\n    setSelectedUsers([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-channel__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-channel__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Edit Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreateChannel, {\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setSelectedUser: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-channel__button-wrapper\",\n      onClick: updateChannel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditChannel, \"zNpnebaFygtRZyVB9/iIjE0aWqk=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = EditChannel;\nexport default EditChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"EditChannel\");","map":{"version":3,"sources":["/Users/rj/Documents/0. coding-project/medical-pager-chat/client/src/components/EditChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","EditChannel","setIsEditing","channel","data","name","selectedUsers","setSelectedUsers","updateChannel","nameChanged","id","update","text","length","addMembers"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useChatContext} from 'stream-chat-react';\n\nimport {UserList} from './';\nimport {CloseCreateChannel} from '../assets';\n\nconst ChannelNameInput = ({channelName ='', setChannelName}) => {\n    \n    // const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n    // const [channelName, setChannelName] = useState('');\n\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Name:</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"Channel-name\" />\n            <p>Add Members</p>\n\n            {/* <UserList /> */}\n        </div>\n\n    )\n}\n\nconst EditChannel = ({setIsEditing}) => {\n    const {channel} = useChatContext();\n    const [channelName, setChannelName] = useState(channel?.data?.name);\n\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    \n    const updateChannel = async (event) => {\n        event.preventDefault();\n\n        const nameChanged = channelName !== (channel.data.name || channel.data.id);\n\n        if (nameChanged) {\n            await channel.update({name: channelName}, {text: `Channel name changed to ${channelName}`});\n        }\n\n        if (selectedUsers.length) {\n            await channel.addMembers(selectedUsers);\n        }\n\n        setChannelName(null);\n        setIsEditing(false);\n        setSelectedUsers([]);\n\n        \n    }\n\n    return (\n        <div className=\"edit-channel__container\">\n            <div className=\"edit-channel__header\">\n                <p>Edit Channel</p>\n                <CloseCreateChannel setIsEditing={setIsEditing} />\n            </div>\n\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>\n            <UserList setSelectedUser={setSelectedUsers}/>\n\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\n                <p>Save Changes</p>\n            </div>\n        </div>\n            \n        \n    )\n}\n\nexport default EditChannel;"]},"metadata":{},"sourceType":"module"}